// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded zlib format compressed contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
