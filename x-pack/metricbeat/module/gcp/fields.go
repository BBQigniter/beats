// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
