[[load-balancing]]
== Load balance the output hosts

++++
<titleabbrev>Load balancing</titleabbrev>
++++

Filebeat provides configuration options that you can use to fine
tune load balancing when sending events to multiple hosts.

To enable load balancing, you specify `loadbalance: true` when you configure
the output. For example:

[source,yaml]
-------------------------------------------------------------------------------
output.logstash:
  hosts: ["localhost:5044", "localhost:5045"]
  loadbalance: true
-------------------------------------------------------------------------------

The `loadbalance` option is available for Redis, Logstash, and Elasticsearch
outputs. The Kafka output handles load balancing internally.

When `loadbalance: true` is set, Filebeat sends data if-and-only-if it can send
to all hosts in the list. Filebeat connects to all hosts in the list and evenly
distributes the events to them. This has the side effect of blocking publishing
to all hosts if any one of them is down or exerting back-pressure.

When `loadbalance: false` is set, Filebeat picks a host at random from the list
and sends data, switching over to other list entries in the event of a failure.
Filebeat also accepts a time to live (TTL), which causes it to voluntarily
reestablish a connection to a new host after a time even if it is healthy.
Otherwise, if a TTL is not set, as long as the first chosen endpoint is available, 
Filebeat continues to communicate with it and only switches to another endpoint
in case of a failure.

The load balancer also supports multiple workers per host. The default is
`worker: 1`. If you increase the number of workers, additional network
connections will be used.  The total number of workers participating
in load balancing is `number of hosts * workers`.

Example:

[source,yaml]
-------------------------------------------------------------------------------
filebeat.inputs:
- type: log
  paths:
    - /var/log/*.log
output.logstash:
  hosts: ["localhost:5044", "localhost:5045"]
  loadbalance: true
  worker: 2
-------------------------------------------------------------------------------

In this example, there are 4 workers participating in load balancing.
